import json

from sic_framework.devices import Pepper
from sic_framework.devices.common_naoqi.naoqi_autonomous import NaoWakeUpRequest
from sic_framework.devices.common_naoqi.naoqi_motion_recorder import (
    NaoqiMotionRecorderConf,
    NaoqiMotionRecording,
    PlayRecording,
)
from sic_framework.devices.common_naoqi.naoqi_stiffness import Stiffness

"""
This demo shows how to replay a motion by loading a JSON file generated by the Choregraphe.
"""

# Configuration
CHAIN = ["Head", "LArm", "RArm"]
MOTION_JSON_FILE = "pepper_motion_nod.json"
ROBOT_IP = "192.168.178.101"

# Initialize Pepper with motion recorder configuration
conf = NaoqiMotionRecorderConf(use_sensors=True)
nao = Pepper(ROBOT_IP, motion_record_conf=conf)

# Wake up the robot
nao.autonomous.request(NaoWakeUpRequest())

# Load and process motion JSON file
with open(MOTION_JSON_FILE, "r") as f:
    data = json.load(f)

recorded_joints = []
recorded_angles = []
recorded_times = []
precision_factor_angles = data["precision_factor_angles"]
precision_factor_times = data["precision_factor_times"]


for joint, values in data["motion"].items():
    recorded_joints.append(joint)
    recorded_angles.append([a / precision_factor_angles for a in values["angles"]])
    recorded_times.append([t / precision_factor_times for t in values["times"]])

# Wrap the data in a NaoqiMotionRecording object
recording = NaoqiMotionRecording(recorded_joints, recorded_angles, recorded_times)

# Replay the motion
print("Replaying action")

# Enable stiffness for replay
nao.stiffness.request(
    Stiffness(stiffness=0.7, joints=CHAIN, enable_joint_list_generation=False)
)

nao.motion_record.request(PlayRecording(recording))

print("Finished replaying action")

# Disable stiffness after replay
nao.stiffness.request(
    Stiffness(stiffness=0.0, joints=CHAIN, enable_joint_list_generation=False)
)
